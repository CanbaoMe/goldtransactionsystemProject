<?xml version="1.0" encoding="UTF-8"?>
<plugin>
  <name>Maven Surefire Plugin</name>
  <description>Surefire is a test framework project.</description>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-surefire-plugin</artifactId>
  <version>2.7.1</version>
  <goalPrefix>surefire</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>test</goal>
      <description>Run tests using Surefire.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>test</phase>
      <implementation>org.apache.maven.plugin.surefire.SurefirePlugin</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>additionalClasspathElements</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional elements to be appended to the classpath.</description>
        </parameter>
        <parameter>
          <name>argLine</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Arbitrary JVM options to set on the command line.</description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The base directory of the project being tested. This can be obtained in your unit test by
System.getProperty(&quot;basedir&quot;).</description>
        </parameter>
        <parameter>
          <name>childDelegation</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>When false it makes tests run using the standard classloader delegation instead of the default Maven isolated
classloader. Only used when forking (forkMode is not &quot;none&quot;).&lt;br/&gt; Setting it to false helps with some problems
caused by conflicts between xml parsers in the classpath and the Java 5 provider parser.</description>
        </parameter>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory containing generated classes of the project being tested.
This will be included after the test classes in the test classpath.</description>
        </parameter>
        <parameter>
          <name>classpathDependencyExcludes</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependencies to exclude from the test classpath.
Each dependency string must follow the format &lt;i&gt;groupId:artifactId&lt;/i&gt;.
For example: &lt;i&gt;org.acme:project-a&lt;/i&gt;</description>
        </parameter>
        <parameter>
          <name>classpathDependencyScopeExclude</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>A dependency scope to exclude from the test classpath
The scope can be one of the following scopes:
&lt;p/&gt;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;compile&lt;/i&gt; - system, provided, compile
&lt;li&gt;&lt;i&gt;runtime&lt;/i&gt; - compile, runtime
&lt;li&gt;&lt;i&gt;test&lt;/i&gt; - system, provided, compile, runtime, test&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>debugForkedProcess</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Attach a debugger to the forked JVM.  If set to &quot;true&quot;, the process will suspend and
wait for a debugger to attach on port 5005.  If set to some other string, that
string will be appended to the argLine, allowing you to configure arbitrary
debuggability options (without overwriting the other options specified in the argLine).</description>
        </parameter>
        <parameter>
          <name>disableXmlReport</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Flag to disable the generation of report files in xml format.</description>
        </parameter>
        <parameter>
          <name>enableAssertions</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>By default, Surefire enables JVM assertions for the execution of your test cases. To disable the assertions, set
this flag to &lt;code&gt;false&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>environmentVariables</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional environments to set on the command line.</description>
        </parameter>
        <parameter>
          <name>excludedGroups</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>(TestNG only) Excluded groups. Any methods/classes/etc with one of the groups specified in this list will specifically not be
run.  This parameter is overridden if suiteXmlFiles are specified.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of patterns (separated by commas) used to specify the tests that should be excluded in testing. When not
specified and when the &lt;code&gt;test&lt;/code&gt; parameter is not specified, the default excludes will be
&lt;code&gt;&lt;br/&gt;
&amp;lt;excludes&gt;&lt;br/&gt;
&amp;nbsp;&amp;lt;exclude&gt;**&amp;#47;*$*&amp;lt;/exclude&gt;&lt;br/&gt;
&amp;lt;/excludes&gt;&lt;br/&gt;
&lt;/code&gt;
(which excludes all inner classes).  This parameter is ignored if TestNG suiteXmlFiles are specified.</description>
        </parameter>
        <parameter>
          <name>failIfNoTests</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &quot;true&quot; to cause a failure if there are no tests to run.</description>
        </parameter>
        <parameter>
          <name>forkMode</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Option to specify the forking mode. Can be &quot;never&quot;, &quot;once&quot; or &quot;always&quot;. &quot;none&quot; and &quot;pertest&quot; are also accepted
for backwards compatibility.</description>
        </parameter>
        <parameter>
          <name>forkedProcessTimeoutInSeconds</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Kill the forked test process after a certain number of seconds.  If set to 0,
wait forever for the process, never timing out.</description>
        </parameter>
        <parameter>
          <name>groups</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>(TestNG only) Groups for this test. Only classes/methods/etc decorated with one of the groups specified here will be included
in test run, if specified.  This parameter is overridden if suiteXmlFiles are specified.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of &amp;lt;include&gt; elements used to specify the the tests that should be included in testing. When not
specified and when the &lt;code&gt;test&lt;/code&gt; parameter is not specified, the default includes will be
&lt;code&gt;&lt;br/&gt;
&amp;lt;includes&gt;&lt;br/&gt;
&amp;nbsp;&amp;lt;include&gt;**&amp;#47;Test*.java&amp;lt;/include&gt;&lt;br/&gt;
&amp;nbsp;&amp;lt;include&gt;**&amp;#47;*Test.java&amp;lt;/include&gt;&lt;br/&gt;
&amp;nbsp;&amp;lt;include&gt;**&amp;#47;*TestCase.java&amp;lt;/include&gt;&lt;br/&gt;
&amp;lt;/includes&gt;&lt;br/&gt;
&lt;/code&gt;
This parameter is ignored if TestNG suiteXmlFiles are specified.</description>
        </parameter>
        <parameter>
          <name>junitArtifactName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Allows you to specify the name of the JUnit artifact. If not set, &lt;code&gt;junit:junit&lt;/code&gt; will be used.</description>
        </parameter>
        <parameter>
          <name>jvm</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Option to specify the jvm (or path to the java executable) to use with the forking options. For the default, the
jvm will be a new instance of the same VM as the one used to run Maven. JVM settings are not inherited from
MAVEN_OPTS</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>ArtifactRepository of the localRepository. To obtain the directory of localRepository in unit tests use
System.setProperty( &quot;localRepository&quot;).</description>
        </parameter>
        <parameter>
          <name>objectFactory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>(TestNG only) Define the factory class used to create all test instances</description>
        </parameter>
        <parameter>
          <name>parallel</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>(TestNG only) When you use the parallel attribute, TestNG will try to run all your test methods in separate threads, except for
methods that depend on each other, which will be run in the same thread in order to respect their order of
execution.
&lt;p/&gt;
(JUnit 4.7 provider) Supports values classes/methods/both to run in separate threads, as controlled by threadCount.</description>
        </parameter>
        <parameter>
          <name>parallelMavenExecution</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>perCoreThreadCount</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>(JUnit 4.7 provider) Indicates that threadCount is per cpu core. Defaults to true</description>
        </parameter>
        <parameter>
          <name>pluginArtifactMap</name>
          <type>java.util.Map</type>
          <required>true</required>
          <editable>false</editable>
          <description>Map of of plugin artifacts.</description>
        </parameter>
        <parameter>
          <name>printSummary</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Option to print summary of test suites or just print the test cases that has errors.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>projectArtifactMap</name>
          <type>java.util.Map</type>
          <required>true</required>
          <editable>false</editable>
          <description>Map of of project artifacts.</description>
        </parameter>
        <parameter>
          <name>properties</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of properties for configuring all TestNG related configurations. This is the new
preferred method of configuring TestNG.</description>
        </parameter>
        <parameter>
          <name>redirectTestOutputToFile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>When forking, set this to true to redirect the unit test standard output to a file (found in
reportsDirectory/testName-output.txt).</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>The plugin remote repositories declared in the POM.</description>
        </parameter>
        <parameter>
          <name>reportFormat</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Selects the formatting for the test report to be generated. Can be set as brief or plain.</description>
        </parameter>
        <parameter>
          <name>reportsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Base directory where all reports are written to.</description>
        </parameter>
        <parameter>
          <name>runOrder</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines the order the tests will be run in. Supported values are alphabetical, reversealphabetical
random, hourly (alphabetical on even hours, reverse alphabetical on odd hours) and filesystem.&lt;p/&gt;
Not supplying a value for this setting will run tests in filesystem order. &lt;p/&gt;
Odd/Even for hourly is determined at the time the of scanning the classpath, meaning it could change during
a multi-module build.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current build session instance.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass unit tests entirely. Its use is NOT RECOMMENDED, especially if you
enable it using the &quot;maven.test.skip&quot; property, because maven.test.skip disables both running the
tests and compiling the tests.  Consider using the skipTests parameter instead.</description>
        </parameter>
        <parameter>
          <name>skipExec</name>
          <type>boolean</type>
          <deprecated>Use -DskipTests instead.</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>This old parameter is just like skipTests, but bound to the old property maven.test.skip.exec.</description>
        </parameter>
        <parameter>
          <name>skipTests</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to skip running tests, but still compile them. Its use is NOT RECOMMENDED, but quite
convenient on occasion.</description>
        </parameter>
        <parameter>
          <name>suiteXmlFiles</name>
          <type>java.io.File[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>(TestNG only) List of TestNG suite xml file locations, seperated by commas. Note that suiteXmlFiles is incompatible
with several other parameters on this plugin, like includes/excludes.  This parameter is ignored if
the &quot;test&quot; parameter is specified (allowing you to run a single test instead of an entire suite).</description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Properties</type>
          <deprecated>Use systemPropertyVariables instead.</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>List of System properties to pass to the JUnit tests.</description>
        </parameter>
        <parameter>
          <name>systemPropertyVariables</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of System properties to pass to the JUnit tests.</description>
        </parameter>
        <parameter>
          <name>test</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specify this parameter to run individual tests by file name, overriding the &lt;code&gt;includes/excludes&lt;/code&gt;
parameters.  Each pattern you specify here will be used to create an
include pattern formatted like &lt;code&gt;**&amp;#47;${test}.java&lt;/code&gt;, so you can just type &quot;-Dtest=MyTest&quot;
to run a single test called &quot;foo/MyTest.java&quot;.  This parameter will override the TestNG suiteXmlFiles
parameter.</description>
        </parameter>
        <parameter>
          <name>testClassesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory containing generated test classes of the project being tested.
This will be included at the beginning the test classpath.</description>
        </parameter>
        <parameter>
          <name>testFailureIgnore</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to true to ignore a failure during testing. Its use is NOT RECOMMENDED, but quite convenient on
occasion.</description>
        </parameter>
        <parameter>
          <name>testNGArtifactName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Allows you to specify the name of the TestNG artifact. If not set, &lt;code&gt;org.testng:testng&lt;/code&gt; will be used.</description>
        </parameter>
        <parameter>
          <name>testSourceDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The test source directory containing test class sources.</description>
        </parameter>
        <parameter>
          <name>threadCount</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>(TestNG/JUnit 4.7 provider only) The attribute thread-count allows you to specify how many threads should be allocated for this execution. Only
makes sense to use in conjunction with parallel.</description>
        </parameter>
        <parameter>
          <name>trimStackTrace</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to trim the stack trace in the reports to just the lines within the test, or show the full trace.</description>
        </parameter>
        <parameter>
          <name>useFile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Option to generate a file test report or just output the test report to the console.</description>
        </parameter>
        <parameter>
          <name>useManifestOnlyJar</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>By default, Surefire forks your tests using a manifest-only JAR; set this parameter
to &quot;false&quot; to force it to launch your tests with a plain old Java classpath.
(See http://maven.apache.org/plugins/maven-surefire-plugin/examples/class-loading.html
for a more detailed explanation of manifest-only JARs and their benefits.)
&lt;p/&gt;
Beware, setting this to &quot;false&quot; may cause your tests to
fail on Windows if your classpath is too long.</description>
        </parameter>
        <parameter>
          <name>useSystemClassLoader</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Option to pass dependencies to the system&apos;s classloader instead of using an isolated class loader when forking.
Prevents problems with JDKs which implement the service provider lookup mechanism by using the system&apos;s
classloader.  Default value is &quot;true&quot;.</description>
        </parameter>
        <parameter>
          <name>useUnlimitedThreads</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>(JUnit 4.7 provider) Indicates that the thread pool will be unlimited. The parallel parameter and the actual number of classes/methods
will decide. Setting this to true effectively disables perCoreThreadCount and threadCount.</description>
        </parameter>
        <parameter>
          <name>workingDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Command line working directory.</description>
        </parameter>
      </parameters>
      <configuration>
        <argLine implementation="java.lang.String">${argLine}</argLine>
        <basedir implementation="java.io.File" default-value="${basedir}"/>
        <childDelegation implementation="boolean" default-value="false">${childDelegation}</childDelegation>
        <classesDirectory implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <debugForkedProcess implementation="java.lang.String">${maven.surefire.debug}</debugForkedProcess>
        <disableXmlReport implementation="boolean" default-value="false">${disableXmlReport}</disableXmlReport>
        <enableAssertions implementation="boolean" default-value="true">${enableAssertions}</enableAssertions>
        <excludedGroups implementation="java.lang.String">${excludedGroups}</excludedGroups>
        <failIfNoTests implementation="java.lang.Boolean">${failIfNoTests}</failIfNoTests>
        <forkMode implementation="java.lang.String" default-value="once">${forkMode}</forkMode>
        <forkedProcessTimeoutInSeconds implementation="int">${surefire.timeout}</forkedProcessTimeoutInSeconds>
        <groups implementation="java.lang.String">${groups}</groups>
        <junitArtifactName implementation="java.lang.String" default-value="junit:junit">${junitArtifactName}</junitArtifactName>
        <jvm implementation="java.lang.String">${jvm}</jvm>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <objectFactory implementation="java.lang.String">${objectFactory}</objectFactory>
        <parallel implementation="java.lang.String">${parallel}</parallel>
        <parallelMavenExecution implementation="java.lang.Boolean" default-value="${session.parallel}"/>
        <perCoreThreadCount implementation="java.lang.String">${perCoreThreadCount}</perCoreThreadCount>
        <pluginArtifactMap implementation="java.util.Map">${plugin.artifactMap}</pluginArtifactMap>
        <printSummary implementation="boolean" default-value="true">${surefire.printSummary}</printSummary>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <projectArtifactMap implementation="java.util.Map">${project.artifactMap}</projectArtifactMap>
        <redirectTestOutputToFile implementation="boolean" default-value="false">${maven.test.redirectTestOutputToFile}</redirectTestOutputToFile>
        <remoteRepositories implementation="java.util.List">${project.pluginArtifactRepositories}</remoteRepositories>
        <reportFormat implementation="java.lang.String" default-value="brief">${surefire.reportFormat}</reportFormat>
        <reportsDirectory implementation="java.io.File" default-value="${project.build.directory}/surefire-reports"/>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <skip implementation="boolean" default-value="false">${maven.test.skip}</skip>
        <skipExec implementation="boolean">${maven.test.skip.exec}</skipExec>
        <skipTests implementation="boolean" default-value="false">${skipTests}</skipTests>
        <test implementation="java.lang.String">${test}</test>
        <testClassesDirectory implementation="java.io.File" default-value="${project.build.testOutputDirectory}"/>
        <testFailureIgnore implementation="boolean" default-value="false">${maven.test.failure.ignore}</testFailureIgnore>
        <testNGArtifactName implementation="java.lang.String" default-value="org.testng:testng">${testNGArtifactName}</testNGArtifactName>
        <testSourceDirectory implementation="java.io.File" default-value="${project.build.testSourceDirectory}"/>
        <threadCount implementation="int">${threadCount}</threadCount>
        <trimStackTrace implementation="boolean" default-value="true">${trimStackTrace}</trimStackTrace>
        <useFile implementation="boolean" default-value="true">${surefire.useFile}</useFile>
        <useManifestOnlyJar implementation="boolean" default-value="true">${surefire.useManifestOnlyJar}</useManifestOnlyJar>
        <useSystemClassLoader implementation="java.lang.Boolean">${surefire.useSystemClassLoader}</useSystemClassLoader>
        <useUnlimitedThreads implementation="java.lang.String">${useUnlimitedThreads}</useUnlimitedThreads>
        <workingDirectory implementation="java.io.File">${basedir}</workingDirectory>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.toolchain.ToolchainManager</role>
          <field-name>toolchainManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on maven-surefire-plugin.&lt;br/&gt; Call &lt;pre&gt;  mvn surefire:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/pre&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugin.surefire.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>surefire-booter</artifactId>
      <type>jar</type>
      <version>2.7.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>surefire-api</artifactId>
      <type>jar</type>
      <version>2.7.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>maven-surefire-common</artifactId>
      <type>jar</type>
      <version>2.7.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-common-artifact-filters</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>2.0.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-parameter-documenter</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-error-diagnostics</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-descriptor</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-monitor</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-toolchain</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
  </dependencies>
</plugin>